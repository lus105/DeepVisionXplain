name: Build & Push to GHCR

on:
  push:
    branches: [ workflow_test ]
    tags:
      - 'v*'       # also build/push on version tags (e.g., v1.2.3)

permissions:
  contents: read
  packages: write

jobs:
  run_tests_ubuntu:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.11"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install sh

      - name: List dependencies
        run: |
          python -m pip list

      - name: Run pytest
        run: |
          pytest -v

  run_tests_windows:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: ["windows-latest"]
        python-version: ["3.11"]

    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: List dependencies
        run: |
          python -m pip list

      - name: Run pytest
        run: |
          pytest -v

  build:
    runs-on: ubuntu-latest
    needs: [run_tests_ubuntu, run_tests_windows]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Setup Buildx (BuildKit)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to GitHub Container Registry
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PASSWORD }}
      
      # Create dummy .env file for CI
      - name: Create dummy .env for CI
        run: |
          echo "host_config_dir=/tmp/configs" > .env
          echo "host_data_dir=/tmp/data" >> .env
          echo "host_log_dir=/tmp/logs" >> .env

      # Derive tags & labels
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=sha
            type=ref,event=tag

      # Build & push using Bake with your compose file
      - name: Build and push
        uses: docker/bake-action@v5
        with:
          files: |
            docker-compose.yaml
          # Push images instead of just building
          push: true
          # Apply extra settings across all targets
          set: |
            *.platform=linux/amd64
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            deepvisionxplain.tags=${{ steps.meta.outputs.tags }}