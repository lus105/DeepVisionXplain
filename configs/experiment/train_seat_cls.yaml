# @package _global_

defaults:
  - override /data: classification_dir
  - override /model: cnn_effnet_v2_s_down
  - override /callbacks: default
  - override /trainer: default
  - override /logger: many_loggers

tags: ["train", "cnn", "seats"]

#===============================================================================

data:
  data_dir: ${oc.env:lear_wrinkles_data_path}
  preprocessing_pipeline:
    _target_: src.data.components.preprocessing.preproc_pipeline_manager.PreprocessingPipeline
    steps:
      - _target_: src.data.components.preprocessing.preproc_strategy_split.SplitStep
        split_ratio: [0.7, 0.2, 0.1]
        seed: 42
        merge_classes: false
      - _target_: src.data.components.preprocessing.preproc_strategy_tile.TilingStep
        tile_size: [224, 224]
        min_defective_area_th: 0.02
        discard_background_th: 0.9
        overlap: 10
        contour_iter_step_size: 5
        iterate_over_defective_areas: true
  overwrite_data: false
  batch_size: 64
  num_workers: 3
  pin_memory: false

  train_transforms:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.ToTensor
      - _target_: torchvision.transforms.RandomHorizontalFlip
        p: 0.5
      - _target_: torchvision.transforms.RandomVerticalFlip
        p: 0.5
      - _target_: torchvision.transforms.RandomApply
        transforms:
          - _target_: torchvision.transforms.RandomChoice
            transforms:
              - _target_: torchvision.transforms.RandomRotation
                degrees: 10
              - _target_: torchvision.transforms.RandomAffine
                degrees: 0
                translate: [0.1, 0.1]
              - _target_: torchvision.transforms.RandomPerspective
                distortion_scale: 0.05
        p: 0.7

  val_test_transforms:
    _target_: torchvision.transforms.Compose
    transforms:
      - _target_: torchvision.transforms.ToTensor

  save_predict_images: false
  num_classes: 2

#===============================================================================

model:
  net:
    multi_head: false
    weights: "IMAGENET1K_V1"
  ckpt_path: null

  optimizer:
    _target_: torch.optim.Adam
    _partial_: true
    lr: 0.001
    weight_decay: 0.0

  scheduler:
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
    _partial_: true
    mode: min
    factor: 0.1
    patience: 10

  loss:
    _target_: torch.nn.BCELoss

  compile: false

#===============================================================================

trainer:
  min_epochs: 10
  max_epochs: 20
  gradient_clip_val: 0.5
  accelerator: gpu

#===============================================================================

logger:
  wandb:
    project: "inobranda"
    log_model: False # upload lightning ckpts
    entity: "easyodm" # set to name of your wandb team
    group: "wrinkle_calssification"

seed: 12345