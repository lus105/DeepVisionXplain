# @package _global_

defaults:
  - override /data: null
  - override /model: null
  - override /callbacks: default
  - override /trainer: default
  - override /logger: wandb

tags: ["train", "segmentation", "seats"]

#data===========================================================================

data:
  _target_: src.data.segmentation_datamodule.SegmentationDataModule

  data_dir: ${oc.env:lear_outline_data_path}
  preprocessing_pipeline: null
  overwrite_data: false

  batch_size: 8  
  num_workers: 3
  pin_memory: false

  train_transforms:
  _target_: albumentations.Compose
  transforms:
      - _target_: albumentations.HorizontalFlip
        p: 0.5
      - _target_: albumentations.ShiftScaleRotate
        p: 0.8
        rotate_limit:
          - -2
          - 2
        scale_limit:
          - -0.03
          - 0.03
        shift_limit:
          - -0.02
          - 0.02
      - _target_: albumentations.OneOf
        transforms:
          - _target_: albumentations.RandomBrightnessContrast
            brightness_limit: 0.15
            contrast_limit: 0.15
            p: 0.5
          - _target_: albumentations.RandomGamma
            gamma_limit:
              - 75
              - 125
            p: 0.5
      - _target_: src.data.components.augmentations.ResizeWithAspectRatio
        always_apply: true
        target_height: 640
        target_width: 768
      - _target_: albumentations.pytorch.transforms.ToTensorV2

  val_test_transforms:
    _target_: albumentations.Compose
    transforms:
      - _target_: src.data.components.augmentations.ResizeWithAspectRatio
        always_apply: true
        target_height: 640
        target_width: 768
      - _target_: albumentations.pytorch.transforms.ToTensorV2

  save_predict_images: false
  num_classes: 2

#model==========================================================================

model:
  _target_: src.models.segmentation_module.SegmentationLitModule

  net:
    _target_: src.models.components.base_model
    model_name: segmentation_models_pytorch/Segformer
    encoder_name: resnet50
    encoder_weigths: imagenet
    num_classes: 1

  optimizer:
    _target_: torch.optim.Adam
    _partial_: true
    lr: 0.001
    weight_decay: 0.0

  scheduler:
    _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
    _partial_: true
    mode: min
    factor: 0.1
    patience: 10

  loss:
    _target_: torch.nn.BCEWithLogitsLoss

  compile: false

  ckpt_path: null

#callbacks======================================================================

callbacks:
  model_checkpoint:
    monitor: "val/iou"
    mode: "max"
    save_last: True
    auto_insert_metric_name: False

  early_stopping:
    monitor: "val/iou"
    mode: "max"

#trainer========================================================================

trainer:
  min_epochs: 10
  max_epochs: 20
  gradient_clip_val: 0.5
  accelerator: gpu

#logger=========================================================================

logger:
  wandb:
    project: "inobranda"
    log_model: False # upload lightning ckpts
    entity: "easyodm" # set to name of your wandb team
    group: "outline_segmentation"

#other==========================================================================

seed: 12345